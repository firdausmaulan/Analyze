apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "org.sonarqube"
apply plugin: "com.hiya.jacoco-android"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.fd.analyze"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

sonarqube {
    properties {
        property "sonar.projectKey", "com.fd.analyze" // TODO: - Setup your project key
        property "sonar.projectName", "Android Code Analyze" // TODO: - Setup your project name
        property "sonar.host.url", "http://localhost:9000/" // TODO: - Setup your Sonarqube server address
        property "sonar.login", "bdda7079b9f487809961c88f21b3acf3b2d4d0ec" // TODO: - Setup your token

        property "sonar.projectVersion", "1.0.0"
        property "sonar.exclusions", "robospice/**/*"

        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/app_classes/debug"
        property "sonar.java.binaries", "build/intermediates/app_classes/debug"
        property "sonar.tests", "src/test/java, src/androidTest/java"
        property "sonar.java.test.binaries", "build/intermediates/app_classes/debug"

        def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
        def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
        unit.addAll(ui);
        def files = unit.join(", ");

        property "sonar.jacoco.reportPaths", files
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}
repositories {
    mavenCentral()
}